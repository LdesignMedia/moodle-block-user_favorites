{"version":3,"file":"favorites.min.js","sources":["../src/favorites.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tested in Moodle 3.5\n *\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n *\n * @copyright 2018 MFreak.nl\n * @author    Luuk Verhoeven\n **/\n\n/* eslint no-unused-expressions: \"off\", no-console:off, no-invalid-this:\"off\",no-script-url:\"off\", block-scoped-var: \"off\" */\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/log', 'core/sortable_list'],\n    function($, Ajax, Notification, Log, SortableList) {\n\n        /**\n         * Opts that are possible to set.\n         *\n         * @type {{id: number, debugjs: boolean}}\n         */\n        let opts = {\n            debugjs: true, id: 0, url: '', hash: ''\n        };\n\n        /**\n         * Set options base on listed options\n         * @param {object} options\n         */\n        const setOptions = function(options) {\n            \"use strict\";\n            let key, vartype;\n            for (key in opts) {\n                if (opts.hasOwnProperty(key) && options.hasOwnProperty(key)) {\n\n                    // Casting to prevent errors.\n                    vartype = typeof opts[key];\n                    if (vartype === \"boolean\") {\n                        opts[key] = Boolean(options[key]);\n                    } else if (vartype === 'number') {\n                        opts[key] = Number(options[key]);\n                    } else if (vartype === 'string') {\n                        opts[key] = String(options[key]);\n                    }\n                    // Skip all other types.\n                }\n            }\n        };\n\n        const attachDragDropHandlers = function() {\n            $('ol#block_user_favorites-items > li').on(SortableList.EVENTS.DRAGEND, function(evt, info) {\n                if (info.positionChanged) {\n                    favoritesModule.setOrder();\n                }\n                evt.stopPropagation();\n            });\n            $('ol#block_user_favorites-items > li').on(SortableList.EVENTS.DRAGSTART, (evt, info) => {\n                setTimeout(() => {\n                    $('.sortable-list-is-dragged').width(info.element.width());\n                }, 501);\n            });\n        };\n\n        const favoritesModule = {\n\n            /**\n             * Add or update a url\n             *\n             * @param {object} data\n             * @param {string} title\n             */\n            setUrl: function(data, title) {\n\n                if (data.hash === null) {\n                    Notification.exception(new Error('No hash found'));\n                    return;\n                }\n\n                if (data.hasOwnProperty('url') && data.url === null) {\n                    delete data.url;\n                }\n\n                // Remove not correct closed confirm dialogs.\n                $('.modal').remove();\n\n                Notification.confirm(M.util\n                        .get_string('javascript:set_title', 'block_user_favorites'),\n                    '<input class=\"form-control\" id=\"favorite-url\" value=\"'\n                    + title + '\">', M.util.get_string('javascript:yes', 'block_user_favorites'),\n                    M.util.get_string('javascript:no', 'block_user_favorites'), function() {\n\n                        let request = Ajax.call([{\n                            methodname: 'block_user_favorites_set_url', args: {\n                                hash: data.hash,\n                                optional: {\n                                    url: data.url,\n                                }, title: $('.modal-dialog #favorite-url').val(),\n                                blockid: opts.id,\n                            }\n                        }]);\n\n                        request[0].done(function(response) {\n                            Log.log(response);\n                            favoritesModule.reload();\n                        }).fail(Notification.exception);\n                    });\n            },\n\n            /**\n             * Add or update a url\n             */\n            setOrder: function() {\n                $('ol#block_user_favorites-items li').each(function(index) {\n                    Ajax.call([{\n                        methodname: 'block_user_favorites_set_order', args: {\n                            hash: $(this).data('hash'), sortorder: index\n                        }\n                    }]);\n                });\n            },\n\n            /**\n             * Delete a url\n             *\n             * @param {object} data\n             */\n            remove: function(data) {\n\n                let request = Ajax.call([{\n                    methodname: 'block_user_favorites_delete_url', args: {\n                        hash: data.hash, blockid: opts.id,\n                    }\n                }]);\n\n                request[0].done(function(response) {\n                    Log.log(response);\n                    favoritesModule.reload();\n                }).fail(Notification.exception);\n            },\n\n            /**\n             * Reload the block\n             */\n            reload: function() {\n\n                let request = Ajax.call([{\n                    methodname: 'block_user_favorites_content', args: {\n                        url: opts.url, blockid: opts.id,\n                    }\n                }]);\n\n                request[0].done(function(response) {\n                    Log.log(response);\n                    $('.block_user_favorites .content').html(response.content);\n                    // Re-attach drag/drop callback on the new content to ensure sorting still works after content refresh\n                    attachDragDropHandlers();\n                }).fail(Notification.exception);\n\n            },\n\n            /**\n             * Init event triggers.\n             */\n            init: function() {\n                Log.log('Init block_user_favorites');\n\n                $('.block_user_favorites').on('click', '#block_user_favorites_set', function() {\n\n                    // Set current as favorite.\n                    favoritesModule.setUrl({\n                        'hash': opts.hash,\n                        'url': window.location.href,\n                    }, $('title').text());\n\n                }).on('click', '#block_user_favorites_delete', function() {\n                    // Delete current pages from favorites.\n                    favoritesModule.remove({\n                        'hash': opts.hash,\n                    });\n\n                }).on('click', '.fa-remove', function() {\n                    // Remove a fav in the list.\n                    favoritesModule.remove($(this).closest('li').data());\n\n                }).on('click', '.fa-edit', function() {\n                    // Edit a fav int the list.\n                    let data = $(this).parent().parent().data();\n                    Log.log('.fa-edit');\n                    Log.log(data);\n                    data.url = null;\n                    favoritesModule.setUrl(data, $(this).parent().parent().find('a').text());\n                });\n                // Instantiate new SortableList component. this only needs to happen once (i.e. not on refresh again).\n                new SortableList('ol#block_user_favorites-items');\n                // Attach the drag/drop callbacks\n                attachDragDropHandlers();\n            }\n        };\n\n        return {\n            /**\n             * Init\n             *\n             * @param {object} args\n             */\n            initialise: function(args) {\n\n                // Load the args passed from PHP.\n                setOptions(args);\n\n                // Set internal debug console.\n                Log.log(opts.debugjs);\n\n                $.noConflict();\n                $(document).ready(function() {\n                    Log.log('Block User Favorites v1.2');\n                    favoritesModule.init();\n                });\n            }\n        };\n    });\n"],"names":["define","$","Ajax","Notification","Log","SortableList","opts","debugjs","id","url","hash","attachDragDropHandlers","on","EVENTS","DRAGEND","evt","info","positionChanged","favoritesModule","setOrder","stopPropagation","DRAGSTART","setTimeout","width","element","setUrl","data","title","hasOwnProperty","remove","confirm","M","util","get_string","call","methodname","args","optional","val","blockid","done","response","log","reload","fail","exception","Error","each","index","this","sortorder","html","content","init","window","location","href","text","closest","parent","find","initialise","options","key","vartype","Boolean","Number","String","setOptions","noConflict","document","ready"],"mappings":"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"}